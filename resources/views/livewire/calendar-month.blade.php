@php
    use App\Enums\CalendarEventType;
    use Carbon\Carbon;

    $weekdays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];

    $firstDay = Carbon::create($year, $month, 1)->dayOfWeekIso - 1;
    $daysInMonth = Carbon::create($year, $month)->daysInMonth;

    $eventTypes = CalendarEventType::cases();

    $sampleCases = $artefactsCases->where('type', 'sample');
    $casesInCalendar = $artefactsCases->where('type', 'in_calendar');


//     TODO:
//     —á—Ç–æ–±—ã –∫—Ä–æ–º–µ —ç–º–æ–¥–∑–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ —Å—É–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É - —á—Ç–æ–± –æ–Ω–æ –ø–∞—Ä—Å–∏–ª–æ
//     —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å w1.dawar.ru...gif|jpg –∏ —Ç–¥
//
//     –æ–±—Ä–µ–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ (—á—Ç–æ–± –≤–ª–∞–∑–∏–≤–∞–ª–æ –∏ –Ω–µ —Ä–∞—Å–ø–∏–¥–æ—Ä—Å–∏–≤–∞–ª–æ –¥–µ–Ω—å –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω)
//
//     –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è (–Ω–∞ –¥–≤–∞—Ä-–≤–∏–∫—É –∏ –æ—Ñ—Ñ)

@endphp
<x-moonshine::layout.grid
    @style('margin: 1.25rem')
                x-data="{   showModal: false, // –î–ª—è –∫–µ–π—Å–æ–≤
                formData: { type: 'in_calendar', date: null },
                showArtefactModal: false, // –î–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
                // openCaseModal –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –∑–¥–µ—Å—å
                openCaseModal(type, date = null) {
                console.log('openCaseModal called with type:', type, 'date:', date); // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
                    this.formData = { type: type, date: date };
                    this.showModal = true;
                    setTimeout(() => {
                         // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞ –ø–µ—Ä–µ–¥ –¥–∏—Å–ø–∞—Ç—á–µ–º
                        if (this.showModal) {
                             console.log('Dispatching open-case-form-modal with:', this.formData); // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
                             this.$dispatch('open-case-form-modal', this.formData);
                        }
                    }, 50); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                },
                // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ (–ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ true)
                openArtefactModal() {
                    console.log('openArtefactModal called');
                    this.showArtefactModal = true;
                },
              sidebarOpen: JSON.parse(localStorage.getItem('sidebarOpen') ?? 'true'),
                toggleSidebar() {
                  this.sidebarOpen = !this.sidebarOpen;
                  localStorage.setItem('sidebarOpen', JSON.stringify(this.sidebarOpen));
                },
              artefactId: null, // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è drop/remove
              artefactCount: null, // –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –¥—Ä–æ–ø–∞
              artefactFromCaseId: null, // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è remove
              artefactIsDragging: false, // –î–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∫–µ–π—Å–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤

              // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–±—Ä–æ—Å–∞ –∫–µ–π—Å–∞
                handleDroppedCase(detail) {

                     const { caseId, date } = detail; // –ü–æ–ª—É—á–∞–µ–º ID –∫–µ–π—Å–∞ –∏ –¥–∞—Ç—É –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è

                     // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ä–µ—Ñ–∞ –¥–ª—è CaseListComponent –Ω—É–∂–Ω–æ–π –¥–∞—Ç—ã
                     const targetRefName = `caseList_${date}`;

                     // <-- –î–û–ë–ê–í–õ–ï–ù–û: –û–±–µ—Ä—Ç—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ $refs –≤ $nextTick -->
                     // –≠—Ç–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ $refs –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ Alpine –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç
                     // —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤—Å–µ—Ö —Ä–µ—Ñ–æ–≤ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–º DOM.
                     this.$nextTick(() => {
                         // –¢–µ–ø–µ—Ä—å –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–µ—Ä–µ–∑ $refs
                         const targetComponentRef = this.$refs[targetRefName];

                         if (targetComponentRef) {
                             // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ Livewire –Ω–∞ —Ü–µ–ª–µ–≤–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ —Å–ø–∏—Å–∫–∞
                             targetComponentRef.$wire.addSampleCaseFromDrop(caseId);
                         } else {
                             console.error('Could not find target CaseListComponent via $refs', targetRefName, '. Final $refs state:', this.$refs);
                             // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                             // –ù–∞–ø—Ä–∏–º–µ—Ä: $dispatch('notify', message: '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–µ–π—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', type: 'error');
                         }
                     }); // <-- –ö–æ–Ω–µ—Ü $nextTick

                },
            }"
    {{-- —Å–ª—É—à–∞—Ç–µ–ª—å @case-added.window –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è --}}
    @case-added.window="showModal = false; $dispatch('close-case-form-modal');"

    {{-- <-- –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ --> --}}
    @close-artefact-modal.window="showArtefactModal = false;"

>

    <div :class="sidebarOpen ? 'col-span-12 xl:col-span-3' : 'xl:col-span-0 hidden'"
         class="relative"
    >
        <div x-data="{ tab: 'events' }" class="sticky top-0 ">
            <button @click="toggleSidebar" class="absolute top-0 right-0 p-1 text-xs z-10">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
            </button>

            <!-- –¢–∞–±—ã -->
            <div class="flex gap-2 mb-5">
                <button @click="tab = 'events'"
                        :class="{ 'text-indigo-400': tab === 'events' }"
                        class="px-3 py-1 rounded bg-gray-200 dark:bg-gray-700">
                    –°–æ–±—ã—Ç–∏—è
                </button>
                <button @click="tab = 'stuff'"
                        :class="{ 'text-indigo-400': tab === 'stuff' }"
                        class="px-3 py-1 rounded bg-gray-200 dark:bg-gray-700">
                    –í—Å—è–∫–∏–µ —à—Ç—É–∫–∏
                </button>
            </div>

            <!-- –í–∫–ª–∞–¥–∫–∞: –í—Å—è–∫–∏–µ —à—Ç—É–∫–∏ -->
            <div x-show="tab === 'stuff'" x-transition class="flex flex-col gap-4">
                <x-moonshine::layout.box title="–í—Å—è–∫–∏–µ —à—Ç—É–∫–∏" class="dark:bg-gray-800">
                    <div class="flex flex-wrap gap-1">
                        @forelse($artefacts as $artefact)
                            <x-artefact.artefact :artefact="$artefact" :iconSize="25"/>
                        @empty
                            <li>–¢—É—Ç —Å–æ–≤—Å–µ–º –Ω–∏—á–∏–≤–æ –Ω–µ—Ç—É =(</li>
                        @endforelse

                            <button class="rounded px-3 py-1 bg-indigo-600 text-white hover:bg-indigo-500"
                                    @click="openArtefactModal()"> {{-- –í—ã–∑—ã–≤–∞–µ–º Alpine –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ --}}
                                + –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫—É—é–Ω–∏–±—É–¥—å —à—Ç—É–∫—É
                            </button>
                    </div>
                </x-moonshine::layout.box>

                <x-moonshine::layout.box title="–ß—É–º–∞–¥–∞–Ω—ã –¥–ª—è –≤—Å—è–∫–∏—Ö —à—Ç—É–∫" class="dark:bg-gray-800">
                    <livewire:case-list-component
                        :listType="'sample'" {{-- –¢–∏–ø —Å–ø–∏—Å–∫–∞ --}}
                    :key="'sample-cases-list'" {{-- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è Livewire --}}
                    />

                    <button type="button"
                            class="px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-500" {{-- Tailwind –∫–ª–∞—Å—Å—ã --}}
                            {{-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º showModal –≤ true –∏ formData —Å —Ç–∏–ø–æ–º 'sample' –∏ date: null --}}
                            @click="openCaseModal('sample')">
                        + –¥–æ–±–∞–≤–∏—Ç—å —á—É–º–∞–¥–∞–Ω
                    </button>

                </x-moonshine::layout.box>

            </div>

            <!-- –í–∫–ª–∞–¥–∫–∞: –°–æ–±—ã—Ç–∏—è -->
            <div x-show="tab === 'events'" x-transition class="flex flex-col gap-4">
                @auth
                    <button id="addEventBtn" class="btn mb-3">
                        <x-moonshine::icon icon="plus" /> –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
                    </button>
                @endauth

                <x-calendar.event-list
                    :title="'1Ô∏è‚É£ –û–±—ã—á–Ω—ã–µ (–µ–¥–∏–Ω–∏—á–Ω—ã–µ)'"
                    :events="collect($monthlyEvents)->where('display_type.value', 'single')->unique('id')"
                    :data_attributes="['id', 'name', 'event_date', 'event_time', 'emoji', 'display_type', 'event_end_date']"
                    :dropdown_past="'single'"
                />

                <x-calendar.event-list
                    :title="'üîÅ –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è'"
                    :events="collect($monthlyEvents)->where('display_type.value', 'repeat')->unique('id')"
                    :data_attributes="['id', 'name', 'event_date', 'event_time', 'emoji', 'display_type', 'event_end_date', 'interval_hours', 'repeat_until']"
                />

                <x-calendar.event-list
                    :title="'üóìÔ∏è –ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ'"
                    :events="collect($monthlyEvents)->where('display_type.value', 'range')->unique('id')"
                    :data_attributes="['id', 'name', 'event_date', 'event_time', 'emoji', 'display_type', 'event_end_date']"
                    :dropdown_past="'range'"
                />
            </div>
        </div>
    </div>

    <div :class="sidebarOpen ? 'col-span-12 xl:col-span-9' : 'xl:col-span-12'"
         class="relative"
    >
        <!-- –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å —Å–∞–π–¥–±–∞—Ä (–ø–æ—è–≤–ª—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –æ–Ω —Å–∫—Ä—ã—Ç) -->
        <button x-show="!sidebarOpen" @click="toggleSidebar" class="fixed top-20 left-1 z-10">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
            </svg>

        </button>
        <x-moonshine::layout.box>
            <div class="calendar-controls flex justify-between items-center mb-4">
                <button
                    wire:click="changeMonth('previous')"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600 text-sm"
                >
                    ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü
                </button>

                <h2 class="text-xl font-bold text-gray-800 dark:text-gray-200">{{ $monthName }} {{ $year }}</h2>

                <button
                    wire:click="changeMonth('next')"
                    class="px-4 py-2 bg-gray-200 dark:bg-gray-700 rounded hover:bg-gray-300 dark:hover:bg-gray-600 text-sm"
                >
                    –°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü ‚Üí
                </button>
            </div>

            <div class="calendar">
                @foreach ($weekdays as $day)
                    <div class="day weekday dark:bg-gray-700">{{ $day }}</div>
                @endforeach

                @for ($i = 0; $i < $firstDay; $i++)
                    <div class="day empty dark:bg-gray-800"></div>
                @endfor

                @for ($day = 1; $day <= $daysInMonth; $day++)
                    @php
                        $key = sprintf("%04d-%02d-%02d", $year, $month, $day);
                        $today = Carbon::now();
                        $isToday = $today->year == $year && $today->month == $month && $today->day == $day;
                    @endphp

                    <div class="day bg-gray-800 {{ $isToday ? 'today' : '' }}  "
                         data-date="{{ $key }}"
                         x-data="{ isDragOver: false }"
                         @dragover.prevent="isDragOver = true" {{-- –ü–æ–∑–≤–æ–ª—è–µ–º —Å–±—Ä–æ—Å –∏ –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ --}}
                         @dragleave="isDragOver = false" {{-- –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —É—Ö–æ–¥–µ –∫—É—Ä—Å–æ—Ä–∞ --}}
                         @drop="isDragOver = false; Livewire.dispatch('add-sample-case-to-list-event', { sampleCaseId: event.dataTransfer.getData('case-id'), targetDate: $el.dataset.date })"
                         @dragend="isDragOver = false"
                         :class="{'bg-white bg-opacity-20': isDragOver}" {{-- –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ --}}
                        >
                        <div class="flex @if(Auth::user()) justify-between @else justify-center @endif w-full">
                            @if(Auth::user())<div class="size-6"></div>@endif
                            <span class="font-bold">{{ $day }}</span>

                            @if(Auth::user())
                                <x-dropdown>
                                    <x-slot name="trigger">
                                        <div class="addInDay">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                            </svg>
                                        </div>
                                    </x-slot>
                                    <x-slot name="content">
                                        <x-dropdown-link class="cursor-pointer" onclick="addEventInDay('{{ $key }}');">
                                            –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
                                        </x-dropdown-link>

                                        <x-dropdown-link class="cursor-pointer addCaseInDay"
                                                         @click="openCaseModal('in_calendar', '{{ $key }}')" >
                                            –î–æ–±–∞–≤–∏—Ç—å —á—É–º–∞–¥–∞–Ω
                                        </x-dropdown-link>
                                    </x-slot>

                            </x-dropdown>
                            @endif
                        </div>

                        <div class="emoji-container">

                            @php
                                $events = ($grouped[$key] ?? collect())->sortBy('event_time');
                                $singleEvents = $events->whereIn('display_type.value', ['repeat', 'single']);
                                $rangeEvents = $events->where('display_type.value', 'range');
                                $nowCases = $casesInCalendar->where('calendar_date', $key)
                            @endphp

                            {{-- –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–æ–±—ã—Ç–∏—è --}}
                            @foreach($singleEvents as $event)
                                <x-calendar.event :event="$event" />
                            @endforeach

                            {{-- –ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è --}}
                            @foreach($rangeEvents as $event)
                                <x-calendar.event :event="$event" is_multiday="true" />
                            @endforeach


                            {{-- –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–µ–π—Å–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≠–¢–û–ì–û –¥–Ω—è --}}
                            <livewire:case-list-component
                                :listType="'in_calendar'" {{-- –¢–∏–ø —Å–ø–∏—Å–∫–∞ --}}
                                :date="$key"           {{-- –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞—Ç—É —ç—Ç–æ–≥–æ –¥–Ω—è --}}
                                :key="'day-cases-list-' . $key" {{-- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è Livewire --}}
                            />
                        </div>
                    </div>
                @endfor
            </div>
        </x-moonshine::layout.box>
    </div>


    @if(Auth::user())

        <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–µ–π—Å–æ–≤ -->
        <div
            id="caseModal"
            class="fixed inset-0 z-50 overflow-y-auto flex items-center justify-center bg-black bg-opacity-50"
            x-show="showModal"
            style="display: none;"
            x-cloak
        >
            {{-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º @click.away –∏ @click –Ω–∞ —Ñ–æ–Ω –ó–î–ï–°–¨, –Ω–∞ –≤–Ω–µ—à–Ω–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –º–æ–¥–∞–ª–∫–∏ --}}
            <div
                class="fixed inset-0 bg-gray-800 bg-opacity-50 transition-opacity"
                aria-hidden="true"
                @click="showModal = false; $dispatch('close-case-form-modal');"
            ></div>

            <div
                class="flex items-center justify-center min-h-screen p-4"
                {{-- x-transition –ø—Ä–∏–º–µ–Ω—è–µ–º –∫ –æ–±–µ—Ä—Ç–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ --}}
                x-transition:enter="ease-out duration-300"
                x-transition:enter-start="opacity-0 scale-90"
                x-transition:enter-end="opacity-100 scale-100"
                x-transition:leave="ease-in duration-200"
                x-transition:leave-start="opacity-100 scale-100"
                x-transition:leave-end="opacity-0 scale-90"
            >
                <div
                    class="relative bg-gray-800 rounded-lg shadow-xl max-w-lg mx-auto p-6"
                >
                    {{-- ... –ó–∞–≥–æ–ª–æ–≤–æ–∫ ... --}}

                    <button
                        type="button"
                        class="absolute top-3 right-3 text-gray-400 hover:text-gray-500"
                        @click="showModal = false; $dispatch('close-case-form-modal');"
                    >
                        <span class="sr-only">–ó–∞–∫—Ä—ã—Ç—å</span>
                        <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>

                    <livewire:case-form
                        x-ref="caseForm"
                    />

                </div>
            </div>
        </div>

        <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–±—ã—Ç–∏–π -->
        <div id="eventModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
            <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl w-full max-w-md p-6 relative mx-auto mt-4">
                <!-- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è -->
                <button id="closeModal" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 text-2xl">
                    &times;
                </button>

                <h2 class="text-xl font-semibold mb-4 text-center">–î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ</h2>

                <form id="eventForm" class="space-y-4">
                    @csrf
                    <input type="hidden" name="id" id="event_id">

                    <div>
                        <x-input-label for="event_display_type">–¢–∏–ø —Å–æ–±—ã—Ç–∏—è</x-input-label>
                        <select name="display_type" id="event_display_type" required
                                class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                            @foreach ($eventTypes as $type)
                                <option value="{{ $type->value }}">{{ $type->toString() }}</option>
                            @endforeach
                        </select>
                    </div>
                    <div class="flex gap-4">
                        <div class="w-1/4">
                            <x-input-label for="event_emoji">–≠–º–æ–¥–∑–∏</x-input-label>
                            <input type="text" name="emoji" id="event_emoji"
                                   class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                        </div>
                        <div class="w-3/4">
                            <x-input-label for="event_name">–ù–∞–∑–≤–∞–Ω–∏–µ</x-input-label>
                            <input type="text" name="name" id="event_name" required
                                   class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                        </div>
                    </div>


                    <div>
                        <x-input-label for="event_date">–î–∞—Ç–∞</x-input-label>
                        <input type="date" name="event_date" id="event_date" required
                               class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                    </div>

                    <div>
                        <x-input-label for="event_time">–í—Ä–µ–º—è</x-input-label>
                        <input type="time" name="event_time" id="event_time" required
                               class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                    </div>

                    <div id="event_repeat_wrapper" class="hidden">
                        <div class="flex gap-4">
                            <div class="w-1/2">
                                <x-input-label for="event_interval_hours">–ò–Ω—Ç–µ—Ä–≤–∞–ª (–≤ —á–∞—Å–∞—Ö)</x-input-label>
                                <input type="number" name="interval_hours" id="event_interval_hours"
                                       class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                            </div>
                            <div class="w-1/2">
                                <x-input-label for="event_repeat_until">–ü–æ–≤—Ç–æ—Ä—è—Ç—å –¥–æ —ç—Ç–æ–π –¥–∞—Ç—ã</x-input-label>
                                <input type="date" name="repeat_until" id="event_repeat_until"
                                       class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                            </div>
                        </div>
                    </div>

                    <div id="event_end_date_wrapper" class="hidden">
                        <x-input-label for="event_end_date">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</x-input-label>
                        <input type="date" name="event_end_date" id="event_end_date"
                               class="mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm">
                    </div>

                    <div class="text-center">
                        <x-primary-button>
                            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                        </x-primary-button>
                    </div>
                </form>
            </div>
        </div>

        {{-- <-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ñ–æ—Ä–º—ã –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ --> --}}
        <div
            id="artefactModal"
            class="fixed inset-0 z-50 overflow-y-auto"
            x-show="showArtefactModal" {{-- –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤–æ–π Alpine –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π --}}
            style="display: none;"
            x-cloak
        >
            {{-- –§–æ–Ω –º–æ–¥–∞–ª–∫–∏ --}}
            <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity" aria-hidden="true"
                 @click="showArtefactModal = false; $dispatch('close-artefact-modal');"> {{-- –ó–∞–∫—Ä—ã—Ç–∏–µ –∏ –¥–∏—Å–ø–∞—Ç—á —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è --}}
            </div>

            {{-- –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥–∞–ª–∫–∏ --}}
            <div class="flex items-center justify-center min-h-screen p-4"
                 x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 scale-90" x-transition:enter-end="opacity-100 scale-100"
                 x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100 scale-100" x-transition:leave-end="opacity-0 scale-90">
                <div class="relative bg-white rounded-lg shadow-xl max-w-lg mx-auto p-6 dark:bg-gray-800">
                    {{-- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è --}}
                    <button type="button" class="absolute top-3 right-3 text-gray-400 hover:text-gray-500"
                            @click="showArtefactModal = false; $dispatch('close-artefact-modal');"> {{-- –ó–∞–∫—Ä—ã—Ç–∏–µ –∏ –¥–∏—Å–ø–∞—Ç—á —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è --}}
                        <span class="sr-only">–ó–∞–∫—Ä—ã—Ç—å</span>
                        <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>
                    </button>
                    {{-- <-- –î–û–ë–ê–í–õ–ï–ù–û: Livewire –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ --> --}}
                    <livewire:artefact-form
                        {{-- –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º—É --}}
                        x-on:close-artefact-modal.window="$wire.resetForm()"
                    />
                </div>
            </div>
        </div>

        {{-- ... –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–±—ã—Ç–∏–π (eventModal) ... --}}
    @endif

</x-moonshine::layout.grid>

@if(Auth::user())
    <script>

        document.getElementById('addEventBtn').addEventListener('click', () => {
            resetForm();
            showModal();
        });

        function addEventInDay(date) {
            resetForm();
            showModal();
            document.getElementById('event_date').value = date;
        }

        document.getElementById('closeModal').addEventListener('click', hideModal);

        function showModal() {
            document.getElementById('eventModal').style.display = 'block';
        }

        function hideModal() {
            document.getElementById('eventModal').style.display = 'none';
        }

        function resetForm() {
            document.getElementById('eventForm').reset();
            document.getElementById('event_id').value = '';

            // –°–±—Ä–æ—Å –ø–æ–ª—è "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
            const endDateWrapper = document.getElementById('event_end_date_wrapper');
            const endDateInput = document.getElementById('event_end_date');
            const event_repeat_until = document.getElementById('event_repeat_until');
            const event_interval_hours = document.getElementById('event_interval_hours');

            const repeatWrapper = document.getElementById('event_repeat_wrapper');

            endDateWrapper.classList.add('hidden'); // —Å–∫—Ä—ã—Ç—å –±–ª–æ–∫
            repeatWrapper.classList.add('hidden'); // —Å–∫—Ä—ã—Ç—å –±–ª–æ–∫
            endDateInput.value = ''; // –æ—á–∏—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
            event_repeat_until.value = ''; // –æ—á–∏—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
            event_interval_hours.value = ''; // –æ—á–∏—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
        }

        const eventTypeSelect = document.getElementById('event_display_type');
        const endDateWrapper = document.getElementById('event_end_date_wrapper');
        const repeatWrapper = document.getElementById('event_repeat_wrapper');

        function toggleEndDateField() {
            const selectedType = eventTypeSelect.value;
            if (selectedType === 'range') {
                endDateWrapper.classList.remove('hidden');
            } else {
                endDateWrapper.classList.add('hidden');
            }
        }

        function toggleRepeatFields() {
            const selectedType = eventTypeSelect.value;
            if (selectedType === 'repeat') {
                repeatWrapper.classList.remove('hidden');
            } else {
                repeatWrapper.classList.add('hidden');
            }
        }

        // –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        toggleEndDateField();
        toggleRepeatFields();

        // –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è
        eventTypeSelect.addEventListener('change', () => {
            toggleEndDateField();
            toggleRepeatFields();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        document.querySelectorAll('.edit-event-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                resetForm();
                document.getElementById('event_id').value = this.dataset.id;
                document.getElementById('event_name').value = this.dataset.name;
                document.getElementById('event_date').value = this.dataset.event_date;
                document.getElementById('event_time').value = this.dataset.event_time;
                document.getElementById('event_emoji').value = this.dataset.emoji;
                document.getElementById('event_display_type').value = this.dataset.display_type;
                if(this.dataset.display_type === 'range'){
                    document.getElementById('event_end_date_wrapper').classList.remove('hidden');
                    document.getElementById('event_end_date').value = this.dataset.event_end_date;
                }else{
                    document.getElementById('event_end_date').value = '';
                }
                if(this.dataset.display_type === 'repeat'){
                    document.getElementById('event_repeat_wrapper').classList.remove('hidden');
                    document.getElementById('event_interval_hours').value = this.dataset.interval_hours;
                    document.getElementById('event_repeat_until').value = this.dataset.repeat_until;
                }else{
                    document.getElementById('event_interval_hours').value = '';
                    document.getElementById('event_repeat_until').value = '';
                }
                showModal();
            });
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
        document.getElementById('eventForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const formData = new FormData(this);

            fetch('/calendar-events/save', {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('input[name=_token]').value
                }
            }).then(res => res.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏');
                    }
                });
        });
    </script>
@endif


<script>
    function eyeToggle(eventId) {
        return {
            visible: true,
            storageKey: `event-visible-${eventId}`,

            init() {
                // –ß—Ç–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
                const stored = localStorage.getItem(this.storageKey);
                this.visible = stored === null ? true : stored === 'true';

                // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫ DOM
                this.applyVisibility();
            },

            toggle() {
                this.visible = !this.visible;

                // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                localStorage.setItem(this.storageKey, this.visible);

                // –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                this.applyVisibility();
            },

            applyVisibility() {
                const selector = `.event_${eventId}`;
                document.querySelectorAll(selector).forEach(div => {
                    if (this.visible) {
                        div.classList.remove('hidden');
                    } else {
                        div.classList.add('hidden');
                    }
                });
            }
        }
    }

    window.addEventListener('calendar:updated', () => {

        setTimeout(() => {
            for (let i = 0; i < localStorage.length; i++) {
                const key = localStorage.key(i);
                if (key.startsWith('event-visible-')) {
                    const id = key.replace('event-visible-', '');
                    const visible = localStorage.getItem(key) === 'true';
                    document.querySelectorAll(`.event_${id}`).forEach(div => {
                        div.classList.toggle('hidden', !visible);
                    });
                }
            }
        }, 30);
    });
</script>
